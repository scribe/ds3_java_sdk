buildscript {
    ext.kotlin_version = '1.1.1'

    repositories {
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    group = 'com.spectralogic.escapepod'
    version = '0.1.0-SNAPSHOT'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = JavaVersion.VERSION_1_8

    repositories {
        maven {
            url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1'
        }
        mavenCentral()
        jcenter()
    }

    dependencies {
        compile 'io.reactivex.rxjava2:rxjava:2.0.7'
        compile 'io.reactivex.rxjava2:rxkotlin:2.0.0'
        compile 'com.google.guava:guava:21.0'
        compile 'com.google.inject:guice:4.1.0'
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.23'
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.12'
        compile 'org.jetbrains.kotlinx:kotlinx-coroutines-nio:0.12'

        testCompile 'junit:junit:4.12'
        testCompile 'org.hamcrest:hamcrest-core:1.3'
        testCompile 'org.mockito:mockito-core:1.+'
        testCompile 'org.assertj:assertj-core:3.6.2'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

project (":api") {
    dependencies {
        compile project(":util")
    }
}
project(":localcache") {
    dependencies {
        compile project(":api")
    }
}

project(":planner") {
    dependencies {
        compile project(":api")
    }
}

project(":mongopersistence") {
    dependencies {
        compile project(":api")
    }
}

project(":hazelcast") {
    dependencies {
        compile project(":api")
    }
}

project(":server") {
    dependencies {
        compile project(":api")
        compile project(":hazelcast")
        compile project(":localcache")
        compile project(":scheduler")
        compile project(":mongopersistence")
    }
}

project(":scheduler") {
    dependencies {
        compile project(":api")
    }
}